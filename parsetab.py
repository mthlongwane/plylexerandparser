
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS LPAREN NAME NUMBER PLUS RPARENstatement : expression\n                 | factor statement   : NAME EQUALS expressionexpression : expression PLUS termexpression : termterm : NAMEterm : NUMBERfactor : LPAREN expression RPAREN'
    
_lr_action_items = {'RPAREN':([1,3,9,10,14,],[-5,-7,-6,13,-4,]),'NAME':([0,6,8,11,],[2,9,9,9,]),'NUMBER':([0,6,8,11,],[3,3,3,3,]),'EQUALS':([2,],[8,]),'PLUS':([1,2,3,7,9,10,12,14,],[-5,-6,-7,11,-6,11,11,-4,]),'LPAREN':([0,],[6,]),'$end':([1,2,3,4,5,7,9,12,13,14,],[-5,-6,-7,0,-2,-1,-6,-3,-8,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,6,8,11,],[1,1,1,14,]),'expression':([0,6,8,],[7,10,12,]),'statement':([0,],[4,]),'factor':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expression','parser.py',66),
  ('statement -> factor','statement',1,'p_statement_expression','parser.py',67),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','parser.py',71),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','parser.py',75),
  ('expression -> term','expression',1,'p_expression_term','parser.py',79),
  ('term -> NAME','term',1,'p_expression_name','parser.py',83),
  ('term -> NUMBER','term',1,'p_term_num','parser.py',87),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','parser.py',91),
]
